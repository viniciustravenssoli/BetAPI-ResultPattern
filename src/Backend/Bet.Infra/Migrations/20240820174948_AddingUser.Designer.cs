// <auto-generated />
using System;
using Bet.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bet.Infra.Migrations
{
    [DbContext(typeof(BettingDbContext))]
    [Migration("20240820174948_AddingUser")]
    partial class AddingUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Bet.Domain.Entities.Bet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BetDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MatchId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Odd")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("UserId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("Bet.Domain.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AmountOnTeamA")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AmountOnTeamB")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeamAId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountOnTeamA = 100.0m,
                            AmountOnTeamB = 150.0m,
                            TeamAId = 1,
                            TeamBId = 2
                        },
                        new
                        {
                            Id = 2,
                            AmountOnTeamA = 200.0m,
                            AmountOnTeamB = 100.0m,
                            TeamAId = 3,
                            TeamBId = 4
                        });
                });

            modelBuilder.Entity("Bet.Domain.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Team A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Team B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Team C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Team D"
                        });
                });

            modelBuilder.Entity("Bet.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bet.Domain.Entities.Bet", b =>
                {
                    b.HasOne("Bet.Domain.Entities.Match", null)
                        .WithMany("Bets")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bet.Domain.Entities.User", null)
                        .WithMany("Bets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bet.Domain.Entities.Match", b =>
                {
                    b.Navigation("Bets");
                });

            modelBuilder.Entity("Bet.Domain.Entities.User", b =>
                {
                    b.Navigation("Bets");
                });
#pragma warning restore 612, 618
        }
    }
}
